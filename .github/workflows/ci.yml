name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1, 8.2, 8.3]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, session, simplexml, tokenizer, xml, zip
        coverage: xdebug
        
    - name: Validate composer.json
      run: composer validate --strict
      
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      
    - name: Run PHP syntax check
      run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;
      
    - name: Run security check
      run: |
        if [ -f composer.lock ]; then
          composer audit
        fi
        
    - name: Test with PHP built-in server
      run: |
        php -S localhost:8000 -t . &
        sleep 5
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/img.php?h=05edd57091ad570303df856c652a7a174554a148 || exit 1
        
    - name: Check file permissions
      run: |
        ls -la documents/
        test -r documents/sample.pdf || exit 1

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_PHP: true
        VALIDATE_HTML: true
        VALIDATE_CSS: true
        VALIDATE_JAVASCRIPT: true

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create deployment package
      run: |
        zip -r hidden-url-${{ github.sha }}.zip . -x "*.git*" "*.github*" "*.DS_Store*" "*.idea*"
        
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: hidden-url-deployment
        path: hidden-url-${{ github.sha }}.zip
